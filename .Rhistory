df = as.data.frame(rbind(A,B,C))
df
A = c(0,0,0,0,0,0,0,0,0)
B = c(0,0,0,0,0,0,0,0,0)
C = c(0,0,0,0,0,0,0,0,0)
D = c(0,0,0,0,0,0,0,0,0)
E = c(0,0,0,0,0,0,0,0,0)
F = c(0,0,0,0,0,0,0,0,0)
G = c(0,0,0,0,0,0,0,0,0)
H = c(0,0,0,0,0,0,0,0,0)
I = c(0,0,0,0,0,0,0,0,0)
df = as.data.frame(rbind(A,B,C,D,E,F,G,H,I))
DF
df
clockrate = c(7.96E-04,
1.08E-04,
3.35E-05,
6.37E-05,
4.41E-04,
1.55E-04,
1.53E-04,
1.47E-04,
5.75E-04,
5.91E-05)
snpsPerGen = c(0.327,
0.126,
0.040,
0.111,
0.523,
0.178,
0.106,
0.138,
0.696,
0.081)
serialInterval = c(12.5,
35.56,
36,
53.17,
36.13,
35,
21,
28.54,
36.82,
41.62)
GSNPs = c(28,
10.5,
3.5,
8,
0,
9,
7,
4.33333,
54,
111)
plot(GSNPs ~ serialInterval)
plot(serialInterval ~ GSNPs)
plot(snpsPerGen ~ GSNPs)
plot(clockrate ~ GSNPs)
devtools::install_github("kathryncampbell/MADDOG", build_vignettes = TRUE, force = TRUE)
load("C:/Users/User/Desktop/PhD/Elaine sims/sims/seed1.Rdata")
setwd("C:/Users/User/Documents/GitHub/Rabies-Mutation")
library(fitdistrplus)
meanClockRate = 1.903E-04
meanClockRate*11923*(17.3/365)
SI_meanlog <- 2.85
SI_sdlog <-  0.966
max_time = 1:1000
curve = c()
for(i in max_time){
curve[i] = dlnorm(i, SI_meanlog, sdlog = SI_sdlog)
}
mutation_distr = c()
for(j in max_time){
mutation_time = meanClockRate*11923*(j/365)
weighted = rep(mutation_time, curve[j]/min(curve))
mutation_distr = append(mutation_distr, weighted)
}
runs = rep(NA, 10)
snps_gamma = data.frame(shape = runs, rate = runs, aic = runs, LL = runs)
snps_lnorm = data.frame(meanlog = runs, sdlog = runs, aic = runs, LL = runs)
for (j in 1:length(runs)){ # for each run assign uncertainty to periods
# Fit distributions
snps_predict_gamma = fitdist(mutation_distr, "gamma")
snps_gamma$shape[j] = snps_predict_gamma$estimate["shape"]
snps_gamma$rate[j] = snps_predict_gamma$estimate["rate"]
snps_gamma$aic[j] = snps_predict_gamma$aic
snps_gamma$LL[j] = snps_predict_gamma$loglik
snps_predict_lnorm = fitdist(mutation_distr, "lnorm")
snps_lnorm$meanlog[j] = snps_predict_lnorm$estimate["meanlog"]
snps_lnorm$sdlog[j] = snps_predict_lnorm$estimate["sdlog"]
snps_lnorm$aic[j] = snps_predict_lnorm$aic
snps_lnorm$LL[j] = snps_predict_lnorm$loglik
print(j)
}
mean(snps_gamma$aic); mean(snps_lnorm$aic)
median(snps_gamma$aic); median(snps_lnorm$aic)
mean(snps_gamma$LL); mean(snps_lnorm$LL)
snps_gamma$aic
snps_lnorm$aic
snps_lnorm$meanlog
snps_lnorm$sdlog
snps_gamma$shape
snps_gamma$rate
#FIGURE 4
tipDists = read.csv("output/pemba/full_bootstraps_100_2022.csv")
bw = 0.005
n_obs = sum(!is.na(tipDists$snpsPerGen))
ggplot(data = data.frame(x = c(0, 0.5)), aes(x)) +
geom_histogram(data= tipDists, aes(snpsPerGen), binwidth = bw, alpha=0.2, fill = "red")+
stat_function(fun = function(x)
dlnorm(x, meanlog =  -2.231138, sdlog = 0.9662017)* bw * n_obs, aes(colour = "Clock Rate Method"), size = 1.1) +
ylab("") +
xlab("SNPs per Generation")+
stat_function(fun= function(x)
dgamma(x, shape = 10.03098, rate = 59.26635)* bw * n_obs, aes(colour = "Novel Method"), size = 1.1) +
theme_bw() + xlim(0,0.5)+
scale_color_manual(name='Prediction Method',
values=c('Clock Rate Method'='blue', 'Novel Method'='red'))+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
library(ggplot2)
ggplot(data = data.frame(x = c(0, 0.5)), aes(x)) +
geom_histogram(data= tipDists, aes(snpsPerGen), binwidth = bw, alpha=0.2, fill = "red")+
stat_function(fun = function(x)
dlnorm(x, meanlog =  -2.231138, sdlog = 0.9662017)* bw * n_obs, aes(colour = "Clock Rate Method"), size = 1.1) +
ylab("") +
xlab("SNPs per Generation")+
stat_function(fun= function(x)
dgamma(x, shape = 10.03098, rate = 59.26635)* bw * n_obs, aes(colour = "Novel Method"), size = 1.1) +
theme_bw() + xlim(0,0.5)+
scale_color_manual(name='Prediction Method',
values=c('Clock Rate Method'='blue', 'Novel Method'='red'))+
theme(axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank())
ggsave("plots/Figure 4.png")
#FIGURE 2
df = read.csv("output/simulation/clockrate-gen-model-comparison.csv")
df = df[is.na(df$Method) == F,]
library(ggplot2)
df2 = df[df$PercentSampled == 0.2,]
df2$Method[df2$Method == "Clock Rate"] = "Time"
library(betareg)
gy_logit_generation = betareg(R_Squared ~ EquivalentPerGenRate, data = df2, subset = Method == "Generation")
gy_logit_time = betareg(R_Squared ~ EquivalentPerGenRate, data = df2, subset = Method == "Time")
predict(gy_logit_time, newdata = df2, interval = 'prediction',
type = "quantile", at = c(0.025, 0.975))
mpi1 <- cbind(df2[df2$Method == "Generation",], predict(gy_logit_generation, newdata = df2, interval = 'prediction',
type = "quantile", at = c(0.025, 0.975)))
mpi2 <- cbind(df2[df2$Method == "Time",], predict(gy_logit_time, newdata = df2, interval = 'prediction',
type = "quantile", at = c(0.025, 0.975)))
ggplot(data = df2, aes(x = EquivalentPerGenRate, y = R_Squared)) +
geom_point(aes(fill = Method), shape = 21, alpha = 0.5) +
geom_ribbon(data = mpi1, aes(ymin = q_0.025, ymax = q_0.975),
fill = "red", alpha = 0.15) +
geom_ribbon(data = mpi2, aes(ymin = q_0.025, ymax = q_0.975),
fill = "blue", alpha = 0.15) +
geom_line(aes(y = predict(gy_logit_time, df2),
colour = "Time", linetype = "Time")) +
geom_line(aes(y = predict(gy_logit_generation, df2),
colour = "Generation", linetype = "Generation")) +
scale_x_continuous(breaks = c(0.05,0.1,0.2,0.5,1,2,3))+
coord_trans(x='log10')+
xlab("Equivalent Per-Generation Substitution Rate (SNPs/Generation)") + ylab("R Squared")+
theme_bw() +
scale_colour_manual("", values = c("blue", "red")) +
scale_fill_manual(name='Mutation Model',
values=c('Time'='blue', 'Generation'='red')) +
scale_linetype_manual("", values = c("solid", "dashed"))
ggplot(data = df2, aes(x = EquivalentPerGenRate, y = R_Squared)) +
geom_point(aes(fill = Method), shape = 21, alpha = 0.5) +
geom_ribbon(data = mpi1, aes(ymin = q_0.025, ymax = q_0.975),
fill = "red", alpha = 0.15) +
geom_ribbon(data = mpi2, aes(ymin = q_0.025, ymax = q_0.975),
fill = "blue", alpha = 0.15) +
geom_line(aes(y = predict(gy_logit_time, df2),
colour = "Time", linetype = "Time")) +
geom_line(aes(y = predict(gy_logit_generation, df2),
colour = "Generation", linetype = "Generation")) +
scale_x_continuous(breaks = c(0.05,0.1,0.2,0.5,1,2,3))+
coord_trans(x='log10')+
xlab("Equivalent Per-Generation Substitution Rate (SNPs/Generation)") + ylab("R Squared")+
theme_bw() +
scale_colour_manual("", values = c("red", "blue")) +
scale_fill_manual(name='Mutation Model',
values=c('Time'='blue', 'Generation'='red')) +
scale_linetype_manual("", values = c("solid", "dashed"))
ggsave("plots/Figure 2.png")
#FIGURE 3
novelMethodAccuracy = read.csv("output/simulation/novel_method_accuracy.csv")
novelMethodAccuracy$Method = "Novel Method"
clockRateMethodAccuracy = read.csv("output/simulation/clockrate_method_accuracy.csv")
clockRateMethodAccuracy$Method = "Clock Rate Method"
Accuracy = rbind(clockRateMethodAccuracy[,c(2,3,5,6,7)], novelMethodAccuracy[,c(3,5,6,9,11)])
Accuracy$decimalAccuracy = Accuracy$SNPsAccuracy/100
library(betareg)
gy_logit_clock = betareg(decimalAccuracy ~ SNPRate, data = Accuracy, subset = Method == "Clock Rate Method")
gy_logit_novel = betareg(decimalAccuracy ~ SNPRate, data = Accuracy, subset = Method == "Novel Method")
predict(gy_logit_clock, newdata = Accuracy, interval = 'prediction',
type = "quantile", at = c(0.025, 0.975))
mpi1 <- cbind(Accuracy[Accuracy$Method == "Clock Rate Method",], predict(gy_logit_clock, newdata = Accuracy, interval = 'prediction',
type = "quantile", at = c(0.025, 0.975)))
mpi2 <- cbind(Accuracy[Accuracy$Method == "Novel Method",], predict(gy_logit_novel, newdata = Accuracy, interval = 'prediction',
type = "quantile", at = c(0.025, 0.975)))
library(ggplot2)
ggplot(Accuracy, aes(x = SNPRate, y = decimalAccuracy)) +
geom_point(aes(fill = Method), shape = 21, alpha = 0.5) +
scale_fill_manual(name='Prediction Method',
values=c('Clock Rate Method'='blue', 'Novel Method'='red')) +
geom_line(aes(y = predict(gy_logit_clock, Accuracy),
colour = "Clock Rate Method", linetype = "Clock Rate Method")) +
geom_line(aes(y = predict(gy_logit_novel, Accuracy),
colour = "Novel Method", linetype = "Novel Method")) +
geom_ribbon(data = mpi1, aes(ymin = q_0.025, ymax = q_0.975),
fill = "blue", alpha = 0.2) +
geom_ribbon(data = mpi2, aes(ymin = q_0.025, ymax = q_0.975),
fill = "red", alpha = 0.2) +
scale_colour_manual("", values = c("blue", "red")) +
scale_linetype_manual("", values = c("solid", "dashed")) +
xlab("Equivalent Per-Generation Substitution Rate (SNPs/Generation)")+
ylab("Accuracy") +
scale_y_continuous(labels = scales::percent, limits = c(0,1))+
theme_bw()
ggsave("plots/Figure 3.png", bg = "transparent")
library(ggplot2)
#sample(1:1000, 1) #121
set.seed(121)
a = rpois(100000, 0.1690)
b = table(a)/sum(table(a))
c = as.data.frame(b)
c$Method = "Novel"
d = rpois(100000, 0.1075)
e = table(d)/sum(table(d))
f = as.data.frame(e)
f$Method = "Clock"
colnames(f) = c("a", "Freq", "Method")
g = rbind(c,f)
ggplot(data=g, aes(x=a, y=Freq, fill = Method)) +
geom_bar(position = "dodge", stat = 'identity') +
geom_text(aes(label=Freq), position=position_dodge(width=0.9), vjust=-0.25) +
theme_bw() +
xlab("No. SNPs") + ylab("Probability of Occurence in 1 Generation")
8*365.25
2922/17.3
(2922/17.3)*0.17
(2922/17.3)*0.11
1424*0.993
11923 - (11923*0.993)
11923 - (11923*0.996)
data = read.csv("output/simulation/simsampledtips_perGen_24_0.000166666666666667_124_621.7.csv")
library(stringr)
startSeq = paste(rep("a",12000), collapse = "")
data$divergence = NA
for(i in 1:nrow(data)){
data$divergence[i] = (nchar(startSeq) - str_count(data$sequence[i], "a"))/nchar(startSeq)
}
data$rate = data$divergence/data$infD
plot(data$divergence ~ data$infD, col = ifelse(data$rate > 8e-06, "red", "black"))
ridgepoints = data[data$rate > 7.75e-06,]
dataFull = read.csv("../Rabies-Mutation-Rates/output/simulation/simFullCases_perGen_24_0.000166666666666667_124.csv")
dataFull = dataFull[,2:ncol(dataFull)]
dataFull$from = as.character(dataFull$from)
dataFull$to = as.character(dataFull$to)
library(igraph)
g = graph.data.frame(dataFull, directed = F)
E(g)$length = dataFull$TimeDiff
E(g)$mode = "-"
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = .6),adjustcolor("SkyBlue2", alpha.f = .25)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = adjustcolor("SkyBlue2", alpha.f = .6),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 2)
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = .6),adjustcolor("SkyBlue2", alpha.f = .25)),
vertex.label.color = adjustcolor("black", .05),
#vertex.frame.color = adjustcolor("SkyBlue2", alpha.f = .6),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 2)
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = .6),adjustcolor("SkyBlue2", alpha.f = .25)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = .6),adjustcolor("SkyBlue2", alpha.f = .25)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 2)
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("SkyBlue2", alpha.f = .15)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("SkyBlue2", alpha.f = .15)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 2)
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("SkyBlue2", alpha.f = .15)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("SkyBlue2", alpha.f = .15)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 3)
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("SkyBlue2", alpha.f = .15)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("SkyBlue2", alpha.f = .15)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 1)
plot(data$divergence ~ data$infD, col = ifelse(data$rate > 7.75e-06, "red", "black"))
plot(data$divergence ~ data$infD, col = ifelse(data$rate > 8e-06, "red", "black"))
plot(data$divergence ~ data$infD, col = ifelse(data$rate > 8e-06 & data$infD > 700, "red", "black"))
plot(data$divergence ~ data$infD, col = ifelse(data$rate > 8e-06 & data$infD > 720, "red", "black"))
plot(data$divergence ~ data$infD, col = ifelse(data$rate > 8e-06 & data$infD > 730, "red", "black"))
plot(data$divergence ~ data$infD, col = ifelse(data$rate > 8e-06 & data$infD > 750, "red", "black"))
ridgepoints = data[data$rate > 8e-06 & data$infD > 750,]
dataFull = read.csv("../Rabies-Mutation-Rates/output/simulation/simFullCases_perGen_24_0.000166666666666667_124.csv")
dataFull = dataFull[,2:ncol(dataFull)]
dataFull$from = as.character(dataFull$from)
dataFull$to = as.character(dataFull$to)
library(igraph)
g = graph.data.frame(dataFull, directed = F)
E(g)$length = dataFull$TimeDiff
E(g)$mode = "-"
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("SkyBlue2", alpha.f = .15)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("SkyBlue2", alpha.f = .15)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 1)
g = graph.data.frame(dataFull, directed = F)
E(g)$mode = "-"
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("SkyBlue2", alpha.f = .15)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("SkyBlue2", alpha.f = .15)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 1)
E(g)$length = dataFull$TimeDiff
legend(x=-1.5, y=-1.1, c("In offshoot ridge","In main ridge"), pch=21,
col=c("red", "SkyBlue2"), pt.bg=colrs, pt.cex=2, cex=.8, bty="n", ncol=1)
legend(x=-1.5, y=-1.1, c("In offshoot ridge","In main ridge"), pch=21,
col=c("red", "SkyBlue2"), pt.cex=2, cex=.8, bty="n", ncol=1)
legend(x=-1.5, y=-1.1, c("In offshoot ridge","In main ridge"), pch=21,
col=c("red", "SkyBlue2"), cex=.8, bty="n", ncol=1)
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("SkyBlue2", alpha.f = .15)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("SkyBlue2", alpha.f = .15)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 1)
legend(x=0, y=0, c("In offshoot ridge","In main ridge"), pch=16,
col=c("red", "SkyBlue2"), cex=.8, bty="n", ncol=1)
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("SkyBlue2", alpha.f = .15)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("SkyBlue2", alpha.f = .15)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 1)
legend(x=-1, y=-1, c("In offshoot ridge","In main ridge"), pch=16,
col=c("red", "SkyBlue2"), cex=.8, bty="n", ncol=1)
legend(x=-1, y=-0.7, c("In offshoot ridge","In main ridge"), pch=16,
col=c("red", "SkyBlue2"), cex=.8, bty="n", ncol=1)
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("SkyBlue2", alpha.f = .15)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("SkyBlue2", alpha.f = .15)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 1)
legend(x=-1, y=-0.7, c("In offshoot ridge","In main ridge"), pch=16,
col=c("red", "SkyBlue2"), cex=.8, bty="n", ncol=1)
par(mfrow=c(1,2))
plot(data$divergence ~ data$infD, col = ifelse(data$rate > 8e-06 & data$infD > 750, "red", "black"))
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("SkyBlue2", alpha.f = .15)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("SkyBlue2", alpha.f = .15)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 1)
legend(x=-1, y=-0.7, c("In offshoot ridge","In main ridge"), pch=16,
col=c("red", "SkyBlue2"), cex=.8, bty="n", ncol=1)
plot(data$divergence ~ data$infD, col = ifelse(data$rate > 8e-06 & data$infD > 750, "red", "darkgrey"))
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 1)
plot(data$divergence ~ data$infD,
col = ifelse(data$rate > 8e-06 & data$infD > 750, "red", "darkgrey"),
pch = 16)
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 1)
legend(x=-1, y=-0.7, c("In offshoot ridge","In main ridge"), pch=16,
col=c("red", "SkyBlue2"), cex=.8, bty="n", ncol=1)
legend(x=-1, y=-0.7, c("In offshoot ridge","In main ridge"), pch=16,
col=c("red", "darkgrey"), cex=.8, bty="n", ncol=1)
plot(data$divergence ~ data$infD,
col = ifelse(data$rate > 8e-06 & data$infD > 750, "red", "darkgrey"),
pch = 16,
xlab = "Time (days)", ylab = "Divergence (subs./site")
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 1,
margin = c(0,0,0,0))
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 1,
margin = c(-.1,-.1,-.1,-.1))
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 1,
margin = c(-.2,-.2,-.2,-.2))
plot(data$divergence ~ data$infD,
col = ifelse(data$rate > 8e-06 & data$infD > 750, "red", "darkgrey"),
pch = 16,
xlab = "Time (days)", ylab = "Divergence (subs./site)")
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 1,
margin = c(-.3,-.2,-.3,-.3))
legend(x=-1, y=-0.7, c("In offshoot ridge","In main ridge"), pch=16,
col=c("red", "darkgrey"), cex=.8, bty="n", ncol=1)
plot(data$divergence ~ data$infD,
col = ifelse(data$rate > 8e-06 & data$infD > 750, "red", "darkgrey"),
pch = 16,
xlab = "Time (days)", ylab = "Divergence (subs./site)")
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 1,
margin = c(-.3,-.2,-.3,-.2))
legend(x=-1.2, y=-0.7, c("In offshoot ridge","In main ridge"), pch=16,
col=c("red", "darkgrey"), cex=.8, bty="n", ncol=1)
plot(data$divergence ~ data$infD,
col = ifelse(data$rate > 8e-06 & data$infD > 750, "red", "darkgrey"),
pch = 16,
xlab = "Time (days)", ylab = "Divergence (subs./site)")
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 1,
margin = c(-.4,-.3,-.4,-.2))
legend(x=-1.2, y=-0.7, c("In offshoot ridge","In main ridge"), pch=16,
col=c("red", "darkgrey"), cex=.8, bty="n", ncol=1)
legend(x=-1, y=-0.7, c("In offshoot ridge","In main ridge"), pch=16,
col=c("red", "darkgrey"), cex=.8, bty="n", ncol=1)
plot(data$divergence ~ data$infD,
col = ifelse(data$rate > 8e-06 & data$infD > 750, "red", "darkgrey"),
pch = 16,
xlab = "Time (days)", ylab = "Divergence (subs./site)")
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 2,
margin = c(-.4,-.3,-.4,-.2))
legend(x=-1, y=-0.7, c("In offshoot ridge","In main ridge"), pch=16,
col=c("red", "darkgrey"), cex=.8, bty="n", ncol=1)
plot(data$divergence ~ data$infD,
col = ifelse(data$rate > 8e-06 & data$infD > 750, "red", "darkgrey"),
pch = 16,
xlab = "Time (days)", ylab = "Divergence (subs./site)")
title("A")
plot(g,
vertex.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
vertex.label.color = adjustcolor("black", .05),
vertex.frame.color = ifelse(names(V(g)) %in% ridgepoints$caseID , adjustcolor("red", alpha.f = 1),adjustcolor("darkgrey", alpha.f = .15)),
layout = layout_as_tree(g),
vertex.label = NA,
vertex.size = 2,
margin = c(-.4,-.3,-.4,-.2))
title("B")
legend(x=-1, y=-0.7, c("In offshoot ridge","In main ridge"), pch=16,
col=c("red", "darkgrey"), cex=.8, bty="n", ncol=1)
