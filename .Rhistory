plot(divergence ~ time, xlab = "Time (years)",
ylab = NA,
col = alpha("red",0.5), pch = 16,
ylim = c(0,0.0022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("B", adj = 0, line = 0.2)
}
else if(f == 4){
points(divergence ~ time, col = alpha("blue",0.5), pch=16)
abline(reg = ml, col = "blue")
}
}
par(mfrow=c(1,2), mar = c(5,2,4,0))
for(f in 1:length(files)){
samples = read.csv(files[f])
time = rep(NA, nrow(samples))
divergence = rep(NA, nrow(samples))
for(i in 1:nrow(samples)){
time[i] = samples$infD[i]/365
divergence[i] = (nchar(startSeq) - str_count(samples$sequence[i], "a"))/nchar(startSeq)
}
ml = lm(divergence ~ time)
if(f == 1){
plot(divergence ~ time, xlab = "Time (years)",
ylab = "Divergence (nucleotide subs./site)",
col = alpha("red", 0.5), pch = 16,
ylim = c(0,0.022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("A", adj = 0, line = 0.2)
legend(x = "topleft",          # Position
legend = c("Generation", "Clock Rate"),  # Legend texts
fill = c("red", "blue"),
bty="n")         # Line colors
}
else if(f == 2){
points(divergence ~ time, col = alpha("blue",0.5), pch = 16)
abline(reg = ml, col = "blue")
}
else if(f == 3){
plot(divergence ~ time, xlab = "Time (years)",
ylab = NA,
col = alpha("red",0.5), pch = 16,
ylim = c(0,0.0022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("B", adj = 0, line = 0.2)
}
else if(f == 4){
points(divergence ~ time, col = alpha("blue",0.5), pch=16)
abline(reg = ml, col = "blue")
}
}
par(mfrow=c(1,2), mar = c(5,2,4,0.5))
for(f in 1:length(files)){
samples = read.csv(files[f])
time = rep(NA, nrow(samples))
divergence = rep(NA, nrow(samples))
for(i in 1:nrow(samples)){
time[i] = samples$infD[i]/365
divergence[i] = (nchar(startSeq) - str_count(samples$sequence[i], "a"))/nchar(startSeq)
}
ml = lm(divergence ~ time)
if(f == 1){
plot(divergence ~ time, xlab = "Time (years)",
ylab = "Divergence (nucleotide subs./site)",
col = alpha("red", 0.5), pch = 16,
ylim = c(0,0.022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("A", adj = 0, line = 0.2)
legend(x = "topleft",          # Position
legend = c("Generation", "Clock Rate"),  # Legend texts
fill = c("red", "blue"),
bty="n")         # Line colors
}
else if(f == 2){
points(divergence ~ time, col = alpha("blue",0.5), pch = 16)
abline(reg = ml, col = "blue")
}
else if(f == 3){
plot(divergence ~ time, xlab = "Time (years)",
ylab = NA,
col = alpha("red",0.5), pch = 16,
ylim = c(0,0.0022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("B", adj = 0, line = 0.2)
}
else if(f == 4){
points(divergence ~ time, col = alpha("blue",0.5), pch=16)
abline(reg = ml, col = "blue")
}
}
par(mfrow=c(1,2), mar = c(3,2,4,0.5))
for(f in 1:length(files)){
samples = read.csv(files[f])
time = rep(NA, nrow(samples))
divergence = rep(NA, nrow(samples))
for(i in 1:nrow(samples)){
time[i] = samples$infD[i]/365
divergence[i] = (nchar(startSeq) - str_count(samples$sequence[i], "a"))/nchar(startSeq)
}
ml = lm(divergence ~ time)
if(f == 1){
plot(divergence ~ time, xlab = "Time (years)",
ylab = "Divergence (nucleotide subs./site)",
col = alpha("red", 0.5), pch = 16,
ylim = c(0,0.022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("A", adj = 0, line = 0.2)
legend(x = "topleft",          # Position
legend = c("Generation", "Clock Rate"),  # Legend texts
fill = c("red", "blue"),
bty="n")         # Line colors
}
else if(f == 2){
points(divergence ~ time, col = alpha("blue",0.5), pch = 16)
abline(reg = ml, col = "blue")
}
else if(f == 3){
plot(divergence ~ time, xlab = "Time (years)",
ylab = NA,
col = alpha("red",0.5), pch = 16,
ylim = c(0,0.0022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("B", adj = 0, line = 0.2)
}
else if(f == 4){
points(divergence ~ time, col = alpha("blue",0.5), pch=16)
abline(reg = ml, col = "blue")
}
}
par(mfrow=c(1,2), mar = c(4,2,3,0.5))
for(f in 1:length(files)){
samples = read.csv(files[f])
time = rep(NA, nrow(samples))
divergence = rep(NA, nrow(samples))
for(i in 1:nrow(samples)){
time[i] = samples$infD[i]/365
divergence[i] = (nchar(startSeq) - str_count(samples$sequence[i], "a"))/nchar(startSeq)
}
ml = lm(divergence ~ time)
if(f == 1){
plot(divergence ~ time, xlab = "Time (years)",
ylab = "Divergence (nucleotide subs./site)",
col = alpha("red", 0.5), pch = 16,
ylim = c(0,0.022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("A", adj = 0, line = 0.2)
legend(x = "topleft",          # Position
legend = c("Generation", "Clock Rate"),  # Legend texts
fill = c("red", "blue"),
bty="n")         # Line colors
}
else if(f == 2){
points(divergence ~ time, col = alpha("blue",0.5), pch = 16)
abline(reg = ml, col = "blue")
}
else if(f == 3){
plot(divergence ~ time, xlab = "Time (years)",
ylab = NA,
col = alpha("red",0.5), pch = 16,
ylim = c(0,0.0022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("B", adj = 0, line = 0.2)
}
else if(f == 4){
points(divergence ~ time, col = alpha("blue",0.5), pch=16)
abline(reg = ml, col = "blue")
}
}
par(mfrow=c(1,2), mar = c(5,2,3,0.5))
for(f in 1:length(files)){
samples = read.csv(files[f])
time = rep(NA, nrow(samples))
divergence = rep(NA, nrow(samples))
for(i in 1:nrow(samples)){
time[i] = samples$infD[i]/365
divergence[i] = (nchar(startSeq) - str_count(samples$sequence[i], "a"))/nchar(startSeq)
}
ml = lm(divergence ~ time)
if(f == 1){
plot(divergence ~ time, xlab = "Time (years)",
ylab = "Divergence (nucleotide subs./site)",
col = alpha("red", 0.5), pch = 16,
ylim = c(0,0.022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("A", adj = 0, line = 0.2)
legend(x = "topleft",          # Position
legend = c("Generation", "Clock Rate"),  # Legend texts
fill = c("red", "blue"),
bty="n")         # Line colors
}
else if(f == 2){
points(divergence ~ time, col = alpha("blue",0.5), pch = 16)
abline(reg = ml, col = "blue")
}
else if(f == 3){
plot(divergence ~ time, xlab = "Time (years)",
ylab = NA,
col = alpha("red",0.5), pch = 16,
ylim = c(0,0.0022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("B", adj = 0, line = 0.2)
}
else if(f == 4){
points(divergence ~ time, col = alpha("blue",0.5), pch=16)
abline(reg = ml, col = "blue")
}
}
par(mfrow=c(1,2), mar = c(5,3,3,0.5))
for(f in 1:length(files)){
samples = read.csv(files[f])
time = rep(NA, nrow(samples))
divergence = rep(NA, nrow(samples))
for(i in 1:nrow(samples)){
time[i] = samples$infD[i]/365
divergence[i] = (nchar(startSeq) - str_count(samples$sequence[i], "a"))/nchar(startSeq)
}
ml = lm(divergence ~ time)
if(f == 1){
plot(divergence ~ time, xlab = "Time (years)",
ylab = "Divergence (nucleotide subs./site)",
col = alpha("red", 0.5), pch = 16,
ylim = c(0,0.022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("A", adj = 0, line = 0.2)
legend(x = "topleft",          # Position
legend = c("Generation", "Clock Rate"),  # Legend texts
fill = c("red", "blue"),
bty="n")         # Line colors
}
else if(f == 2){
points(divergence ~ time, col = alpha("blue",0.5), pch = 16)
abline(reg = ml, col = "blue")
}
else if(f == 3){
plot(divergence ~ time, xlab = "Time (years)",
ylab = NA,
col = alpha("red",0.5), pch = 16,
ylim = c(0,0.0022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("B", adj = 0, line = 0.2)
}
else if(f == 4){
points(divergence ~ time, col = alpha("blue",0.5), pch=16)
abline(reg = ml, col = "blue")
}
}
par(mfrow=c(1,2), mar = c(5,4,3,0.5))
for(f in 1:length(files)){
samples = read.csv(files[f])
time = rep(NA, nrow(samples))
divergence = rep(NA, nrow(samples))
for(i in 1:nrow(samples)){
time[i] = samples$infD[i]/365
divergence[i] = (nchar(startSeq) - str_count(samples$sequence[i], "a"))/nchar(startSeq)
}
ml = lm(divergence ~ time)
if(f == 1){
plot(divergence ~ time, xlab = "Time (years)",
ylab = "Divergence (nucleotide subs./site)",
col = alpha("red", 0.5), pch = 16,
ylim = c(0,0.022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("A", adj = 0, line = 0.2)
legend(x = "topleft",          # Position
legend = c("Generation", "Clock Rate"),  # Legend texts
fill = c("red", "blue"),
bty="n")         # Line colors
}
else if(f == 2){
points(divergence ~ time, col = alpha("blue",0.5), pch = 16)
abline(reg = ml, col = "blue")
}
else if(f == 3){
plot(divergence ~ time, xlab = "Time (years)",
ylab = NA,
col = alpha("red",0.5), pch = 16,
ylim = c(0,0.0022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("B", adj = 0, line = 0.2)
}
else if(f == 4){
points(divergence ~ time, col = alpha("blue",0.5), pch=16)
abline(reg = ml, col = "blue")
}
}
par(mfrow=c(1,2), mar = c(5,4,3,0.5))
for(f in 1:length(files)){
samples = read.csv(files[f])
time = rep(NA, nrow(samples))
divergence = rep(NA, nrow(samples))
for(i in 1:nrow(samples)){
time[i] = samples$infD[i]/365
divergence[i] = (nchar(startSeq) - str_count(samples$sequence[i], "a"))/nchar(startSeq)
}
ml = lm(divergence ~ time)
if(f == 1){
plot(divergence ~ time, xlab = "Time (years)",
ylab = "Divergence (nucleotide subs./site)",
col = alpha("red", 0.5), pch = 16,
ylim = c(0,0.022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("A", adj = 0, line = 0.2)
legend(x = "topleft",          # Position
legend = c("Generation", "Clock Rate"),  # Legend texts
fill = c("red", "blue"),
bty="n")         # Line colors
}
else if(f == 2){
points(divergence ~ time, col = alpha("blue",0.5), pch = 16)
abline(reg = ml, col = "blue")
}
else if(f == 3){
par(mar = c(5,2,3,0.5))
plot(divergence ~ time, xlab = "Time (years)",
ylab = NA,
col = alpha("red",0.5), pch = 16,
ylim = c(0,0.0022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("B", adj = 0, line = 0.2)
}
else if(f == 4){
points(divergence ~ time, col = alpha("blue",0.5), pch=16)
abline(reg = ml, col = "blue")
}
}
par(oma = c(5,4,0,0) + 0.1,
mar = c(0,0,1,1) + 0.1)
for(f in 1:length(files)){
samples = read.csv(files[f])
time = rep(NA, nrow(samples))
divergence = rep(NA, nrow(samples))
for(i in 1:nrow(samples)){
time[i] = samples$infD[i]/365
divergence[i] = (nchar(startSeq) - str_count(samples$sequence[i], "a"))/nchar(startSeq)
}
ml = lm(divergence ~ time)
if(f == 1){
plot(divergence ~ time, xlab = "Time (years)",
ylab = "Divergence (nucleotide subs./site)",
col = alpha("red", 0.5), pch = 16,
ylim = c(0,0.022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("A", adj = 0, line = 0.2)
legend(x = "topleft",          # Position
legend = c("Generation", "Clock Rate"),  # Legend texts
fill = c("red", "blue"),
bty="n")         # Line colors
}
else if(f == 2){
points(divergence ~ time, col = alpha("blue",0.5), pch = 16)
abline(reg = ml, col = "blue")
}
else if(f == 3){
plot(divergence ~ time, xlab = "Time (years)",
ylab = NA,
col = alpha("red",0.5), pch = 16,
ylim = c(0,0.0022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("B", adj = 0, line = 0.2)
}
else if(f == 4){
points(divergence ~ time, col = alpha("blue",0.5), pch=16)
abline(reg = ml, col = "blue")
}
}
par(oma = c(5,4,0,0),
mar = c(0,0,1,1) + 0.1)
for(f in 1:length(files)){
samples = read.csv(files[f])
time = rep(NA, nrow(samples))
divergence = rep(NA, nrow(samples))
for(i in 1:nrow(samples)){
time[i] = samples$infD[i]/365
divergence[i] = (nchar(startSeq) - str_count(samples$sequence[i], "a"))/nchar(startSeq)
}
ml = lm(divergence ~ time)
if(f == 1){
plot(divergence ~ time, xlab = "Time (years)",
ylab = "Divergence (nucleotide subs./site)",
col = alpha("red", 0.5), pch = 16,
ylim = c(0,0.022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("A", adj = 0, line = 0.2)
legend(x = "topleft",          # Position
legend = c("Generation", "Clock Rate"),  # Legend texts
fill = c("red", "blue"),
bty="n")         # Line colors
}
else if(f == 2){
points(divergence ~ time, col = alpha("blue",0.5), pch = 16)
abline(reg = ml, col = "blue")
}
else if(f == 3){
plot(divergence ~ time, xlab = "Time (years)",
ylab = NA,
col = alpha("red",0.5), pch = 16,
ylim = c(0,0.0022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("B", adj = 0, line = 0.2)
}
else if(f == 4){
points(divergence ~ time, col = alpha("blue",0.5), pch=16)
abline(reg = ml, col = "blue")
}
}
par(mfrow=c(1,2), mar = c(5,4,3,0.5))
for(f in 1:length(files)){
samples = read.csv(files[f])
time = rep(NA, nrow(samples))
divergence = rep(NA, nrow(samples))
for(i in 1:nrow(samples)){
time[i] = samples$infD[i]/365
divergence[i] = (nchar(startSeq) - str_count(samples$sequence[i], "a"))/nchar(startSeq)
}
ml = lm(divergence ~ time)
if(f == 1){
plot(divergence ~ time, xlab = "Time (years)",
ylab = "Divergence (nucleotide subs./site)",
col = alpha("red", 0.5), pch = 16,
ylim = c(0,0.022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("A", adj = 0, line = 0.2)
legend(x = "topleft",          # Position
legend = c("Generation", "Clock Rate"),  # Legend texts
fill = c("red", "blue"),
bty="n")         # Line colors
}
else if(f == 2){
points(divergence ~ time, col = alpha("blue",0.5), pch = 16)
abline(reg = ml, col = "blue")
}
else if(f == 3){
plot(divergence ~ time, xlab = "Time (years)",
ylab = NA,
col = alpha("red",0.5), pch = 16,
ylim = c(0,0.0022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("B", adj = 0, line = 0.2)
}
else if(f == 4){
points(divergence ~ time, col = alpha("blue",0.5), pch=16)
abline(reg = ml, col = "blue")
}
}
par(mfrow = c(1, 2),     # 2x2 layout
oma = c(2, 2, 0, 0), # two rows of text at the outer left and bottom margin
mar = c(1, 1, 0, 0), # space for one row of text at ticks and to separate plots
mgp = c(2, 1, 0),    # axis label at 2 rows distance, tick labels at 1 row
xpd = NA)            # allow content to protrude into outer margin (and beyond)
for(f in 1:length(files)){
samples = read.csv(files[f])
time = rep(NA, nrow(samples))
divergence = rep(NA, nrow(samples))
for(i in 1:nrow(samples)){
time[i] = samples$infD[i]/365
divergence[i] = (nchar(startSeq) - str_count(samples$sequence[i], "a"))/nchar(startSeq)
}
ml = lm(divergence ~ time)
if(f == 1){
plot(divergence ~ time, xlab = "Time (years)",
ylab = "Divergence (nucleotide subs./site)",
col = alpha("red", 0.5), pch = 16,
ylim = c(0,0.022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("A", adj = 0, line = 0.2)
legend(x = "topleft",          # Position
legend = c("Generation", "Clock Rate"),  # Legend texts
fill = c("red", "blue"),
bty="n")         # Line colors
}
else if(f == 2){
points(divergence ~ time, col = alpha("blue",0.5), pch = 16)
abline(reg = ml, col = "blue")
}
else if(f == 3){
plot(divergence ~ time, xlab = "Time (years)",
ylab = NA,
col = alpha("red",0.5), pch = 16,
ylim = c(0,0.0022),
xlim = c(0,7.2))
abline(reg = ml, col = "red")
title("B", adj = 0, line = 0.2)
}
else if(f == 4){
points(divergence ~ time, col = alpha("blue",0.5), pch=16)
abline(reg = ml, col = "blue")
}
}
